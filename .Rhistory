ggtitle("Y = 49.44 + 2.969 * X") +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 24),
plot.title = element_text(size = 32))
summary(lm_econ)
lm_econ <- lm(pv2p ~ avg_gdp, data = dat)
head(dat)
dat <- popvote %>%
select(year, party, winner, pv2p, incumbent_party) %>%
left_join(economy_df) %>%
filter(incumbent_party == T) %>%
filter(quarter == 2 | quarter == 3) %>%
group_by(year) %>%
mutate(avg_gdp = mean(GDP_growth_qt),
avg_rdi = mean(RDI_growth),
avg_inflation = mean(inflation),
avg_unemployment = mean(unemployment))%>%
select(year, party, winner, pv2p, incumbent_party, avg_gdp, avg_rdi, avg_inflation, avg_unemployment) %>%
unique()
lm_econ <- lm(pv2p ~ avg_gdp, data = dat)
lm_econ <- lm(pv2p ~ avg_rdi, data = dat)
lm_econ <- lm(pv2p ~ avg_unemployment, data = dat)
lm_econ <- lm(pv2p ~ avg_inflation, data = dat)
lm_gdp <- lm(pv2p ~ avg_gdp, data = dat)
lm_rdi <- lm(pv2p ~ avg_rdi, data = dat)
lm_unemployment <- lm(pv2p ~ avg_unemployment, data = dat)
lm_inflation <- lm(pv2p ~ avg_inflation, data = dat)
lm_gdp
summary(lm_gdp)
tidy(lm_gdp)
library(broom)
tidy(lm_gdp)
tidy(lm_gdp)
tidy(lm_rdi)
tidy(lm_unemployment)
tidy(lm_inflation)
lm_gdp
lm_gdp
summary(lm_gdp)
?tidy
sm_gdp <- summary(lm_gdp)
sm_rdi <- summary(lm_rdi)
sm_unemployment <- summary(lm_unemployment)
sm_inflation <- summary(lm_inflation)
sm_gdp
data.frame(var = 1,2,3)
data.frame(var = sm_gdp$r.squared,2,3)
?data.frame
data.frame(row.names = gdp, var = sm_gdp$r.squared,2,3)
data.frame(row.names = "gdp", var = sm_gdp$r.squared,2,3)
data.frame(row.names = c("gdp", "rdi", "unemploment", "inflation"), var = sm_gdp$r.squared,2,3)
data.frame(row.names = c("gdp", "rdi", "unemploment", "inflation"), r_squared = sm_gdp$r.squared,2,3)
data.frame(row.names = c("gdp", "rdi", "unemploment", "inflation"), r_squared = c(sm_gdp$r.squared,2,3,7))
data.frame(
row.names = c("gdp", "rdi", "unemploment", "inflation"),
r_squared = c(
sm_gdp$r.squared,
sm_rdi$r.squared,
sm_unemployment$r.squared, sm_inflation$r.squared
)
)
data.frame(
row.names = c("gdp", "rdi", "unemploment", "inflation"),
r_squared = c(
sm_gdp$r.squared,
sm_rdi$r.squared,
sm_unemployment$r.squared,
sm_inflation$r.squared
),
mse = c(
mean(sm_gdp$residuals ^ 2),
mean(sm_rdi$residuals ^ 2),
mean(sm_unemployment$residuals ^ 2),
mean(sm_inflation$residuals ^ 2)
)
)
library(gtable)
data.frame(
row.names = c("gdp", "rdi", "unemploment", "inflation"),
r_squared = c(
sm_gdp$r.squared,
sm_rdi$r.squared,
sm_unemployment$r.squared,
sm_inflation$r.squared
),
mse = c(
sqrt(mean(sm_gdp$residuals ^ 2)),
sqrt(mean(sm_rdi$residuals ^ 2)),
sqrt(mean(sm_unemployment$residuals ^ 2)),
sqrt(mean(sm_inflation$residuals ^ 2))
)
)
stats <- data.frame(
row.names = c("gdp", "rdi", "unemploment", "inflation"),
r_squared = c(
sm_gdp$r.squared,
sm_rdi$r.squared,
sm_unemployment$r.squared,
sm_inflation$r.squared
),
mse = c(
sqrt(mean(sm_gdp$residuals ^ 2)),
sqrt(mean(sm_rdi$residuals ^ 2)),
sqrt(mean(sm_unemployment$residuals ^ 2)),
sqrt(mean(sm_inflation$residuals ^ 2))
)
)
gt(stats)
?gt
library(gt)
install.packages("gt")
library(gt)
gt(stats)
?gt
stats <- data.frame(
row.names = c("gdp", "rdi", "unemploment", "inflation"),
model = c("Average 2nd and 3rd Quarter GDP Growth",
"Average 2nd and 3rd Quarter RDI Growth",
"Average 2nd and 3rd Quarter Inflation",
"Average 2nd and 3rd Quarter Unemployment"),
r_squared = c(
sm_gdp$r.squared,
sm_rdi$r.squared,
sm_unemployment$r.squared,
sm_inflation$r.squared
),
mse = c(
sqrt(mean(sm_gdp$residuals ^ 2)),
sqrt(mean(sm_rdi$residuals ^ 2)),
sqrt(mean(sm_unemployment$residuals ^ 2)),
sqrt(mean(sm_inflation$residuals ^ 2))
)
)
gt(stats) %>%
tab_header()
gt(stats, rowname_col = c("R Squared", "MSE")) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
gt(stats, rowname_col = c("R Squared", "MSE")) %>%
tab_header(title = "Economic Models for Predicting Elections")
gt(stats, rowname_col = c("R Squared", "MSE"))
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections")
?cols_label
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE")
gt(stats, digits = 2) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE")
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(decimals = 2)
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE")
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(decimals = 2)
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number()
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(columns = 2:3,
decimals = 2)
tail(dat)
ggsave(path = "images", filename = "gdp_model.png", height = 4, width = 8)
ggsave(path = "images", filename = "rdi_model.png", height = 4, width = 8)
ggsave(path = "images", filename = "unemployment_model.png", height = 4, width = 8)
ggsave(path = "images", filename = "inflation_model.png", height = 4, width = 8)
gtsave(path = "images", filename = "model_gt.png", height = 4, width = 8)
gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(columns = 2:3,
decimals = 2)
gtsave(path = "images", filename = "model_gt.png", height = 4, width = 8)
models_gt <- gt(stats) %>%
tab_header(title = "Economic Models for Predicting Elections") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(columns = 2:3,
decimals = 2)
gtsave(path = "images", filename = "model_gt.png", height = 4, width = 8)
gtsave(data = models_gt, path = "images", filename = "model_gt.png", height = 4, width = 8)
install.packages("webshot")
library(webshot)
gtsave(data = models_gt, path = "images", filename = "model_gt.png", height = 4, width = 8)
gtsave(data = models_gt, path = "images", filename = "model_gt.png")
webshot::install_phantomjs()
gtsave(data = models_gt, path = "images", filename = "model_gt.png")
4 +4
dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
ggsave(path = "images", filename = "gdp_model.png", height = 4, width = 8)
rdi_model <- dat %>%
ggplot(aes(x= avg_rdi, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter RDI Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
ggsave(path = "images", filename = "rdi_model.png", height = 4, width = 8)
unemployment_model <- dat %>%
ggplot(aes(x= avg_unemployment, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter Unemployment") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
ggsave(path = "images", filename = "unemployment_model.png", height = 4, width = 8)
inflation_model <- dat %>%
ggplot(aes(x= avg_inflation, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter Inflation") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
ggsave(path = "images", filename = "inflation_model.png", height = 4, width = 8)
predict(lm_rdi, 44.9)
?predict
lm_rdi <- lm(pv2p ~ avg_rdi, data = dat)
predict(lm_rdi, 44.9)
predict(lm_rdi, quarter2_rdi_growth)
quarter2_rdi_growth <- 44.9
predict(lm_rdi, quarter2_rdi_growth)
predict(lm_rdi, ewdata = data.frame(x=44.9))
predict(lm_rdi, newdata = data.frame(x=44.9))
predict(lm_rdi, newdata = data.frame(x=44.9))
predict(lm_rdi, ewdata = data.frame(x=44.9))
predict(lm_rdi, newdata = data.frame(avg_rdi=44.9))
predict(lm_rdi, avg_rdi=44.9)
predict(lm_rdi, new data  = avg_rdi=44.9)
predict(lm_rdi, newdata = avg_rdi=44.9)
predict(lm_rdi, newdata = data.frame(44.9))
predict(lm_rdi, newdata = data.frame(avg_rdi = 44.9))
lm_rdi <- lm(pv2p ~ avg_rdi, data = dat)
lm_rdi
sm_rdi
econ
dat
econ
econ %>% filter(year > 1970)
predict(lm_rdi, newdata = data.frame(avg_rdi = 44.9))
quarter2_econ <- data.frame(avg_rdi = 44.9)
quarter2_econ
predict(lm_rdi, quarter2_econ)
predict(lm_rdi, quarter2_econ, interval = "prediction")
predict(lm_rdi, quarter2_econ)
predict(lm_gdp, quarter2_econ)
quarter2_econ <- data.frame(avg_rdi = 44.9, avg_gdp = -32.9)
predict(lm_rdi, quarter2_econ)
predict(lm_gdp, quarter2_econ)
dat
lm_gdp <- lm(pv2p ~ avg_gdp, data = dat)
econ <- read.csv("data/econ.csv")
econ
econ %>% filter(year > 2016)
new_gdp <- econ %>%
filter(year == 2020 & quarter == 2)
predict(lm_rdi, new_gdp)
predict(lm_gdp, new_gdp)
new_gdp <- econ %>%
filter(year == 2020 & quarter == 2) %>%
mutate(avg_rdi = RDI_growth,
avg_gdp = GDP_growth_qt)
predict(lm_rdi, new_gdp)
predict(lm_gdp, new_gdp)
new_gdp
predict(lm_rdi, new_gdp)
predict(lm_gdp, new_gdp)
predict(lm_rdi, new_gdp, interval = "prediction")
tail(dat)
predict(lm_gdp, new_gdp)
predict(lm_gdp, new_gdp, interval = "prediction")
head(econ)
new_gdp <- econ %>%
filter(year == 2020 & quarter == 2) %>%
mutate(avg_rdi = RDI_growth,
avg_gdp = GDP_growth_qt,
avg_unemployment = unemployment,
avg_inflation = inflation)
predict(lm_unemployment, new_gdp, interval = "prediction")
predict(lm_inflation, new_gdp, interval = "prediction")
predict_rdi <- predict(lm_rdi, new_gdp, interval = "prediction")
predict_gdp <- predict(lm_gdp, new_gdp, interval = "prediction")
predict_unemployment <- predict(lm_unemployment, new_gdp, interval = "prediction")
predict_inflation <- predict(lm_inflation, new_gdp, interval = "prediction")
predict_gdp
predict_rdi %>%
bind_rows(predict_gdp)
?bind_rows
predict_rdi %>%
bind_rows(predict_gdp, .id = "model")
predict_rdi <- predict(lm_rdi, new_gdp, interval = "prediction")
predict_gdp <- predict(lm_gdp, new_gdp, interval = "prediction")
predict_rdi %>%
bind_rows(predict_gdp, .id = "model")
predict_rdi %>%
bind_rows(list(predict_gdp), .id = "model")
predict_rdi %>%
bind_rows(list(predict_gdp), .id = "model")
bind_rows(list(predict_rdi, predict_gdp), .id = "model")
bind_rows(list(predict_rdi, predict_gdp), .id = "model")
predict_rdi <- data.frame(predict(lm_rdi, new_gdp, interval = "prediction"))
predict_rdi <- data.frame(predict(lm_rdi, new_gdp, interval = "prediction"))
predict_gdp <- data.frame(predict(lm_gdp, new_gdp, interval = "prediction"))
predict_unemployment <- data.frame(predict(lm_unemployment, new_gdp, interval = "prediction"))
predict_inflation <- data.frame(predict(lm_inflation, new_gdp, interval = "prediction"))
bind_rows(list(predict_rdi, predict_gdp), .id = "model")
bind_rows(list(predict_rdi, predict_gdp, predict_unemployment, predict_inflation), .id = "model")
models_predict <- bind_rows(list(predict_rdi, predict_gdp, predict_unemployment, predict_inflation), .id = "model") %>%
mutate(Model = c("RDI", "GDP", "Unemployment", "Inflation"))
models_predict
models_predict <- bind_rows(list(predict_rdi, predict_gdp, predict_unemployment, predict_inflation), .id = "model") %>%
mutate(Model = c("RDI", "GDP", "Unemployment", "Inflation")) %>%
select(Model, fit, lwr, upr)
models_predict <- bind_rows(list(predict_rdi, predict_gdp, predict_unemployment, predict_inflation), .id = "model") %>%
mutate(Model = c("RDI", "GDP", "Unemployment", "Inflation")) %>%
select(Model, fit, lwr, upr) %>%
gt()
models_predict
models_predict <- bind_rows(list(predict_rdi, predict_gdp, predict_unemployment, predict_inflation), .id = "model") %>%
mutate(Model = c("RDI", "GDP", "Unemployment", "Inflation")) %>%
select(Model, fit, lwr, upr) %>%
gt() %>%
tab_header(title = "2020 Two-Party Vote Share Prediction by Models") %>%
cols_label(fit = "Prediction", lwr = "Lower Prediction Bound", upr = "Upper Prediction Bound") %>%
fmt_number(columns = 2:4,
decimals = 2)
models_predict
gtsave(data = models_predict, path = "images", filename = "econ_model_predict_gt.png")
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
title("GDP Model")
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
title("GDP Model") +
theme_minimal()
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
title("GDP Model") +
theme_minimal()
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
theme_minimal()
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
labs(title = "GDP Growth Model") %>%
theme_minimal()
gdp_model <- dat %>%
ggplot(aes(x= avg_gdp, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter GDP Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
labs(title = "GDP Growth Model") +
theme_minimal()
ggsave(path = "images", filename = "gdp_model.png", height = 4, width = 8)
rdi_model <- dat %>%
ggplot(aes(x= avg_rdi, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter RDI Growth") +
ylab("Incumbent Party's Two-Party Vote Share") +
labs(title = "RDI Growth Model") +
theme_minimal()
ggsave(path = "images", filename = "rdi_model.png", height = 4, width = 8)
unemployment_model <- dat %>%
ggplot(aes(x= avg_unemployment, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter Unemployment") +
ylab("Incumbent Party's Two-Party Vote Share") +
labs(title = "Unemployment Model") +
theme_minimal()
ggsave(path = "images", filename = "unemployment_model.png", height = 4, width = 8)
inflation_model <- dat %>%
ggplot(aes(x= avg_inflation, y= pv2p,
label= year)) +
geom_text() +
geom_smooth(method="lm", formula = y ~ x) +
geom_hline(yintercept=50, lty=2) +
geom_vline(xintercept=0.01, lty=2) + # median
xlab("Average 2nd and 3rd Quarter Inflation") +
ylab("Incumbent Party's Two-Party Vote Share") +
labs(title = "Inflation Model") +
theme_minimal()
ggsave(path = "images", filename = "inflation_model.png", height = 4, width = 8)
x1 <- (gdp_model + rdi_model)
x1 <- (gdp_model + rdi_model)
install.packages("patchwork")
library(patchwork)
x1 <- (gdp_model + rdi_model)
x1
x2 <- (unemployment_model + inflation_model)
x1 <- (gdp_model + rdi_model)
ggsave(path = "images", filename = "patchwork_1.png", height = 4, width = 8)
x2 <- (unemployment_model + inflation_model)
ggsave(path = "images", filename = "patchwork_2.png", height = 4, width = 8)
?table
remove.packages("qsslearnr")
remotes::install_github("mattblackwell/qsslearnr")
head(popvote)
popvote %>%
group_by(incumbent) %>%
summarize(mean(pv2p))
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggrepel)
library(ggthemes)
library(patchwork)
library(gt)
library(broom)
library(caret)
library(usmap)
popvote %>%
group_by(incumbent) %>%
summarize(mean(pv2p))
