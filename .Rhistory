predict_polls$state <- state.abb[match(predict_polls$state, state.name)]
head(predict_polls)
predict_polls %>%
full_join(demog_2020_change, by = "state")
predictions <- data.frame(predict(poll_dem_mod, newdata))
predict_polls$state <- state.abb[match(predict_polls$state, state.name)]
new_data <- predict_polls %>%
full_join(demog_2020_change, by = "state")
predictions <- data.frame(predict(poll_dem_mod, newdata))
newdata
new_data <- predict_polls %>%
full_join(demog_2020_change, by = "state")
newdata <- predict_polls %>%
full_join(demog_2020_change, by = "state")
predictions <- data.frame(predict(poll_dem_mod, newdata))
predict_polls <- polls_2020 %>%
select(poll_id, state, answer, end_date, pct) %>%
mutate(end_date = mdy(polls_2020$end_date)) %>%
filter(end_date > ymd("2020-09-01") & end_date < ymd("2020-10-07")) %>%
filter(answer == "Biden" | answer == "Trump") %>%
group_by(state, answer) %>%
summarise(avg_poll = mean(pct)) %>%
filter(!(state %in% c(""))) %>%
filter(answer == "Biden")
predict_polls$state <- state.abb[match(predict_polls$state, state.name)]
newdata <- predict_polls %>%
full_join(demog_2020_change, by = "state")
predictions <- data.frame(predict(poll_dem_mod, newdata))
predictions
newdata
predict_ads <- ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = sum(biden_airings) / sum(total_airings) * sum(total_cost)) %>%
mutate(rep_total_cost = sum(trump_airings) / sum(total_airings) * sum(total_cost)) %>%
select(state, dem_total_cost, rep_total_cost) %>%
unique()
newdata <- predict_ads %>%
inner_join(predict_polls, by = c("state")) %>%
filter(answer == "Biden") %>%
mutate(month_cost = dem_total_cost) %>%
mutate(avg_poll = avg_support) %>%
select(state, month_cost, avg_poll)
predictions <- data.frame(predict(month_spend_dem_mod, newdata))
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump"))
predict_polls <- polls_2020 %>%
select(poll_id, state, answer, end_date, pct) %>%
mutate(end_date = mdy(polls_2020$end_date)) %>%
filter(end_date > ymd("2020-09-01") & end_date < ymd("2020-10-07")) %>%
filter(answer == "Biden" | answer == "Trump") %>%
group_by(state, answer) %>%
summarise(avg_poll = mean(pct)) %>%
filter(!(state %in% c(""))) %>%
filter(answer == "Biden")
predict_polls$state <- state.abb[match(predict_polls$state, state.name)]
newdata <- predict_polls %>%
full_join(demog_2020_change, by = "state")
predictions <- data.frame(predict(poll_dem_mod, newdata))
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump"))
predictions
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump"))
state_dem_vs
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs
?state.abb
state_dem_vs
state_dem_vs$state <- state.name[match(state_dem_vs$state, state.abb)]
state_dem_vs
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "poll_dem_predict.png", height = 6, width = 10)
summary(poll_dem_mod)
turnout <- read_csv("data/turnout_1980-2016.csv")
head(turnout)
summary(poll_dem_mod)
head(demog)
demog_2020 <- subset(demog, year == 2018)
demog_2020 <- as.data.frame(demog_2020)
rownames(demog_2020) <- demog_2020$state
demog_2020 <- demog_2020[state.abb, ]
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.03) * demog_2020$Asian - (0.01 *
0.03) * demog_2020$Black - (0.06 *
0.03) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
predictions_2
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2[2]) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.....2.19...0.03....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.3) * demog_2020$Asian - (0.01 *
0.3) * demog_2020$Black - (0.06 *
0.3) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.....2.19...0.03....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
predictions_2
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.....2.19...0.3....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.8) * demog_2020$Asian - (0.01 *
0.8) * demog_2020$Black - (0.06 *
0.8) * demog_2020$Hispanic
)
predictions_2
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.....2.19...0.8....demog_2020.Asian..) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.8) * demog_2020$Asian - (0.01 *
0.8) * demog_2020$Black - (0.06 *
0.8) * demog_2020$Hispanic
)
predictions_2
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.poll_dem_mod..newdata.....2.19...0.8....demog_2020.Asian....) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.8....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 1) * demog_2020$Asian - (0.01 *
1) * demog_2020$Black - (0.06 *
1) * demog_2020$Hispanic
)
predictions_2
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...1....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
summary(poll_dem_spend_gt)
summary(poll_dem_mod)
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.04) * demog_2020$Asian - (0.01 *
0.07) * demog_2020$Black - (0.06 *
0.04) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.04....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.1) * demog_2020$Asian - (0.01 *
0.1) * demog_2020$Black - (0.06 *
0.1) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.1....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.11) * demog_2020$Asian - (0.01 *
0.11) * demog_2020$Black - (0.06 *
0.11) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.1....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.11....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.15) * demog_2020$Asian - (0.01 *
0.15) * demog_2020$Black - (0.06 *
0.15) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.11....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.15....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.2) * demog_2020$Asian - (0.01 *
0.2) * demog_2020$Black - (0.06 *
0.2) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.2....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.25) * demog_2020$Asian - (0.01 *
0.25) * demog_2020$Black - (0.06 *
0.25) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.25....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.30) * demog_2020$Asian - (0.01 *
0.30) * demog_2020$Black - (0.06 *
0.30) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.25....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.30....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.3....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
summary(poll_dem_mod)
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.10) * demog_2020$Asian - (0.01 *
0.10) * demog_2020$Black - (0.06 *
0.10) * demog_2020$Hispanic - (1.09 * 0.10)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.1....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.04) * demog_2020$Asian - (0.01 *
0.04) * demog_2020$Black - (0.06 *
0.07) * demog_2020$Hispanic - (1.09 * 0.04)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.04....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.05) * demog_2020$Asian - (0.01 *
0.05) * demog_2020$Black - (0.06 *
0.05) * demog_2020$Hispanic - (1.09 * 0.05)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.05....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "surge_predict.png", height = 6, width = 10)
state_dem_vs_2
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Decreased Demographic Effects",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "surge_predict.png", height = 6, width = 10)
