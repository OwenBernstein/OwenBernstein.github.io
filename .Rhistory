r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(columns = 2:3,
decimals = 2)
ad_models_gt <- gt(stats) %>%
tab_header(title = "State Election Models Using Polls and Ad Spending") %>%
cols_label(model = "Model",
r_squared = "R Squared",
mse = "MSE") %>%
fmt_number(columns = 2:3,
decimals = 2)
gtsave(data = ad_models_gt, path = "images", filename = "ad_models_gt.png")
states
"states"
head(clean_campaign)
unique_states <- unique(clean_campaign$state)
length(unique_states)
head(ads_2020)
View(month_spend_mod)
head(clean_campaign)
head(ads_2020)
ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = biden_airings / total_airings * total_cost) %>%
mutate(rep_total_cost = trump_airings / total_airings * total_cost)
ads_2020$state <- recode(ads_2020$state,
"AK" = "Alaska",
"AL" = "Alabama",
"AR" = "Arkansas",
"AZ" = "Arizona",
"CA" = "California",
"CO" = "Colorado",
"CT" = "Connecticut",
"DC" = "District of Columbia",
"DE" = "Delaware",
"FL" = "Florida",
"GA" = "Georgia",
"HI" = "Hawaii",
"IA" = "Iowa",
"ID" = "Idaho",
"IL" = "Illinois",
"IN" = "Indiana",
"KS" = "Kansas",
"KY" = "Kentucky",
"LA" = "Louisiana",
"MA" = "Massachusetts",
"MD" = "Maryland",
"ME" = "Maine",
"MI" = "Michigan",
"MN" = "Minnesota",
"MO" = "Missouri",
"MS" = "Mississippi",
"MT" = "Montana",
"NC" = "North Carolina",
"ND" = "North Dakota",
"NE" = "Nebraska",
"NH" = "New Hampshire",
"NJ" = "New Jersey",
"NM" = "New Mexico",
"NV" = "Nevada",
"NY" = "New York",
"OH" = "Ohio",
"OK" = "Oklahoma",
"OR" = "Oregon",
"PA" = "Pennsylvania",
"RI" = "Rhode Island",
"SC" = "South Carolina",
"SD" = "South Dakota",
"TN" = "Tennessee",
"TX" = "Texas",
"UT" = "Utah",
"VA" = "Virginia",
"VT" = "Vermont",
"WA" = "Washington",
"WI" = "Wisconsin",
"WY" = "Wyoming")
ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = biden_airings / total_airings * total_cost) %>%
mutate(rep_total_cost = trump_airings / total_airings * total_cost)
ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = biden_airings / total_airings * total_cost) %>%
mutate(rep_total_cost = trump_airings / total_airings * total_cost) %>%
select(state, dem_total_cost, rep_total_cost)
unique_states
unique_states <- rep(NA, rep(unique(clean_campaign$state))
unique_states <- rep(NA, rep(unique(clean_campaign$state)))
unique_states <- rep(NA, rep(length(unique(clean_campaign$state))))
unique_states
length(unique_states)
predict(sm_month_spend_dem, 20, 20)
predict(sm_month_spend_dem, new_data = data.frame(avg_poll = 20, month_cost = 20))
predict(month_spend_dem_mod, new_data = data.frame(avg_poll = 20, month_cost = 20))
new_data = data.frame(avg_poll = 20, month_cost = 20)
new_data
?predict
predict(month_spend_dem_mod, new_data = data.frame(avg_poll = c(20, 40), month_cost = c(20, 40)))
head(polls_2020)
predict_polls <- polls_2020 %>%
select(poll_id, state, answer, end_date, pct) %>%
mutate(end_date = mdy(polls_2020$end_date)) %>%
filter(end_date > ymd("2020-08-27") & end_date < ymd("2020-09-27")) %>%
filter(answer == "Biden" | answer == "Trump") %>%
group_by(state, answer) %>%
summarise(avg_support = mean(pct)) %>%
filter(!(state %in% c("", "District of Columbia", "ME-1","ME-2","NE-1","NE-2","NE-3")))
head(predict_polls)
predict_ads <- ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = biden_airings / total_airings * total_cost) %>%
mutate(rep_total_cost = trump_airings / total_airings * total_cost) %>%
select(state, dem_total_cost, rep_total_cost)
head(predict_ads)
head(ads_2020)
predict_ads <- ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = sum(biden_airings) / sum(total_airings) * sum(total_cost)) %>%
mutate(rep_total_cost = sum(trump_airings) / sum(total_airings) * sum(total_cost)) %>%
select(state, dem_total_cost, rep_total_cost)
head(predict_ads)
predict_ads <- ads_2020 %>%
group_by(state) %>%
mutate(dem_total_cost = sum(biden_airings) / sum(total_airings) * sum(total_cost)) %>%
mutate(rep_total_cost = sum(trump_airings) / sum(total_airings) * sum(total_cost)) %>%
select(state, dem_total_cost, rep_total_cost) %>%
unique()
head(predict_polls)
head(predict_ads)
prediction_df <- predict_ads %>%
inner_join(predict_polls, by = c("state"))
prediction_df
prediction_df <- predict_ads %>%
inner_join(predict_polls, by = c("state")) %>%
filter(answer == "Biden")
head(prediction_df)
unique_states <- rep(NA, rep(length(unique(prediction_df$state))))
length(unique_states)
prediction_df <- predict_ads %>%
inner_join(predict_polls, by = c("state")) %>%
filter(answer == "Biden") %>%
mutate(month_cost = dem_total_cost) %>%
mutate(avg_poll = avg_support) %>%
select(state, month_cost, avg_poll)
head(prediction_df)
new_data <- predict_ads %>%
inner_join(predict_polls, by = c("state")) %>%
filter(answer == "Biden") %>%
mutate(month_cost = dem_total_cost) %>%
mutate(avg_poll = avg_support) %>%
select(state, month_cost, avg_poll)
newdata <- predict_ads %>%
inner_join(predict_polls, by = c("state")) %>%
filter(answer == "Biden") %>%
mutate(month_cost = dem_total_cost) %>%
mutate(avg_poll = avg_support) %>%
select(state, month_cost, avg_poll)
class(newdata)
predict(month_spend_dem_mod, newdata)
data.frame(predict(month_spend_dem_mod, newdata))
data.frame(predict(month_spend_dem_mod, newdata))
predictions <- data.frame(predict(month_spend_dem_mod, newdata))
predictions
predictions$predict.month_spend_dem_mod..newdata. <- newdata$state
predictions
state_dem_vs <- predictions %>%
mutate(state = newdata$state)
state_dem_vs
predictions <- data.frame(predict(month_spend_dem_mod, newdata))
state_dem_vs <- predictions %>%
mutate(state = newdata$state)
state_dem_vs
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs)
state_dem_vs
class(state_dem_vs)
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
breaks = c(-50,-25,0,25,50),
limits = c(-55,55),
name = "win margin"
) +
theme_void()
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
name = "win margin"
) +
theme_void()
state_dem_vs
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
breaks = c(-50,-25,0,25,50),
limits = c(-55,55),
name = "win margin"
) +
theme_void()
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
breaks = c(65, 50, 35),
limits = c(65, 35),
name = "win margin"
) +
theme_void()
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
limits = c(65, 35),
name = "win margin"
) +
theme_void()
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
mid = "white",
low = "red",
limits = c(35, 65),
name = "win margin"
) +
theme_void()
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs")
plot_usmap(data = state_dem_vs, regions = "states", values = "dem_vs") +
scale_fill_gradient2(
high = "blue",
low = "red",
name = "win margin"
) +
theme_void()
?scale_fill_discrete
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs) %>%
mutate(winner = ifelse(dem_vs > 50, dem, rep()))
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs) %>%
mutate(winner = ifelse(dem_vs > 50, "dem", "rep"))
state_dem_vs
install.packages("statebins")
library(statebins)
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "using only TV advertisement data and party as predictors",
fill = "") +
scale_fill_manual(values=c("#619CFF", "#F8766D"), breaks = c("Biden", "Trump"))
statebin_map
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins()
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "using only TV advertisement data and party as predictors",
fill = "") +
scale_fill_manual(values=c("#619CFF", "#F8766D"), breaks = c("Biden", "Trump"))
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins()
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "using only TV advertisement data and party as predictors",
fill = "")
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "using only TV advertisement data and party as predictors",
fill = "") +
scale_fill_manual(values=c("#619CFF", "#F8766D"), breaks = c("dem", "rep"))
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "dem", "rep"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "using only TV advertisement data and party as predictors",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Democrat", "Republican"))
statebin_map
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump"))
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map
state_dem_vs
?add_row
unique(clean_campaign$state)
state_dem_vs$state
state_dem_vs
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
arrange(desc(state))
state_dem_vs
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
select(state, dem_vs) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
arrange(state)
arrange(unique(clean_campaign$state))
clean_campaign %>% arrange(state)
state_dem_vs$state
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
select(state, winner) %>%
add_row(state = "Alabama", winner = "Trump") %>%
add_row(state = "Alaska", winner = "Trump") %>%
add_row(state = "Arkansas", winner = "Trump") %>%
add_row(state = "Connecticut", winner = "Biden") %>%
add_row(state = "Deleware", winner = "Biden") %>%
add_row(state = "Hawaii", winner = "Biden") %>%
add_row(state = "Illinois", winner = "Biden") %>%
add_row(state = "Kansas", winner = "Trump") %>%
add_row(state = "Maryland", winner = "Biden") %>%
add_row(state = "Massachusetts", winner = "Biden") %>%
add_row(state = "Nebraska", winner = "Trump") %>%
add_row(state = "New Jersey", winner = "Biden") %>%
add_row(state = "New York", winner = "Biden") %>%
add_row(state = "North Dakota", winner = "Trump") %>%
add_row(state = "Rhode Island", winner = "Biden") %>%
add_row(state = "South Dakota", winner = "Trump") %>%
add_row(state = "Tennessee", winner = "Trump") %>%
add_row(state = "West Virginia", winner = "Trump") %>%
add_row(state = "Wyoming", winner = "Trump")
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending"
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "poll_spend_predict.png", height = 6, width = 10)
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
select(state, winner) %>%
add_row(state = "Alabama", winner = "Trump") %>%
add_row(state = "Alaska", winner = "Trump") %>%
add_row(state = "Arkansas", winner = "Trump") %>%
add_row(state = "Connecticut", winner = "Biden") %>%
add_row(state = "Delaware", winner = "Biden") %>%
add_row(state = "Hawaii", winner = "Biden") %>%
add_row(state = "Illinois", winner = "Biden") %>%
add_row(state = "Kansas", winner = "Trump") %>%
add_row(state = "Maryland", winner = "Biden") %>%
add_row(state = "Massachusetts", winner = "Biden") %>%
add_row(state = "Nebraska", winner = "Trump") %>%
add_row(state = "New Jersey", winner = "Biden") %>%
add_row(state = "New York", winner = "Biden") %>%
add_row(state = "North Dakota", winner = "Trump") %>%
add_row(state = "Rhode Island", winner = "Biden") %>%
add_row(state = "South Dakota", winner = "Trump") %>%
add_row(state = "Tennessee", winner = "Trump") %>%
add_row(state = "West Virginia", winner = "Trump") %>%
add_row(state = "Wyoming", winner = "Trump")
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "poll_spend_predict.png", height = 6, width = 10)
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
select(state, winner) %>%
add_row(state = "Alabama", winner = "Trump") %>%
add_row(state = "Alaska", winner = "Trump") %>%
add_row(state = "Arkansas", winner = "Trump") %>%
add_row(state = "Connecticut", winner = "Biden") %>%
add_row(state = "Delaware", winner = "Biden") %>%
add_row(state = "Hawaii", winner = "Biden") %>%
add_row(state = "Illinois", winner = "Biden") %>%
add_row(state = "Kansas", winner = "Trump") %>%
add_row(state = "Maryland", winner = "Biden") %>%
add_row(state = "Massachusetts", winner = "Biden") %>%
add_row(state = "Nebraska", winner = "Trump") %>%
add_row(state = "New Jersey", winner = "Biden") %>%
add_row(state = "New York", winner = "Biden") %>%
add_row(state = "North Dakota", winner = "Trump") %>%
add_row(state = "Rhode Island", winner = "Biden") %>%
add_row(state = "South Dakota", winner = "Trump") %>%
add_row(state = "Tennessee", winner = "Trump") %>%
add_row(state = "West Virginia", winner = "Trump") %>%
add_row(state = "Wyoming", winner = "Trump") %>%
add_row(state = "DC", winner = "Biden")
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
state_dem_vs <- predictions %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predict.month_spend_dem_mod..newdata.) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
select(state, winner) %>%
add_row(state = "Alabama", winner = "Trump") %>%
add_row(state = "Alaska", winner = "Trump") %>%
add_row(state = "Arkansas", winner = "Trump") %>%
add_row(state = "Connecticut", winner = "Biden") %>%
add_row(state = "Delaware", winner = "Biden") %>%
add_row(state = "Hawaii", winner = "Biden") %>%
add_row(state = "Illinois", winner = "Biden") %>%
add_row(state = "Kansas", winner = "Trump") %>%
add_row(state = "Maryland", winner = "Biden") %>%
add_row(state = "Massachusetts", winner = "Biden") %>%
add_row(state = "Nebraska", winner = "Trump") %>%
add_row(state = "New Jersey", winner = "Biden") %>%
add_row(state = "New York", winner = "Biden") %>%
add_row(state = "North Dakota", winner = "Trump") %>%
add_row(state = "Rhode Island", winner = "Biden") %>%
add_row(state = "South Dakota", winner = "Trump") %>%
add_row(state = "Tennessee", winner = "Trump") %>%
add_row(state = "West Virginia", winner = "Trump") %>%
add_row(state = "Wyoming", winner = "Trump") %>%
add_row(state = "District of Columbia", winner = "Biden")
state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map <- state_dem_vs %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Last Two Months of Ad Spending",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "poll_spend_predict.png", height = 6, width = 10)
EC
