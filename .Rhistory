ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.25) * demog_2020$Asian - (0.01 *
0.25) * demog_2020$Black - (0.06 *
0.25) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.25....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.30) * demog_2020$Asian - (0.01 *
0.30) * demog_2020$Black - (0.06 *
0.30) * demog_2020$Hispanic
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.25....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.30....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.3....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
summary(poll_dem_mod)
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.10) * demog_2020$Asian - (0.01 *
0.10) * demog_2020$Black - (0.06 *
0.10) * demog_2020$Hispanic - (1.09 * 0.10)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.1....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.04) * demog_2020$Asian - (0.01 *
0.04) * demog_2020$Black - (0.06 *
0.07) * demog_2020$Hispanic - (1.09 * 0.04)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.04....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
state_dem_vs_2
predictions_2 <-
data.frame(
predict(poll_dem_mod, newdata) - (2.19 * 0.05) * demog_2020$Asian - (0.01 *
0.05) * demog_2020$Black - (0.06 *
0.05) * demog_2020$Hispanic - (1.09 * 0.05)*demog_2020$Female
)
state_dem_vs_2 <- predictions_2 %>%
mutate(state = newdata$state) %>%
mutate(dem_vs = predictions_2$predict.poll_dem_mod..newdata.....2.19...0.05....demog_2020.Asian...) %>%
mutate(winner = ifelse(dem_vs > 50, "Biden", "Trump")) %>%
drop_na() %>%
select(state, dem_vs, winner)
state_dem_vs_2$state <- state.name[match(state_dem_vs_2$state, state.abb)]
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
statebin_map_2
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Demographics",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "surge_predict.png", height = 6, width = 10)
state_dem_vs_2
statebin_map_2 <- state_dem_vs_2 %>%
ggplot(aes(state = state, fill = fct_relevel(winner, "Biden", "Trump"))) +
geom_statebins() +
theme_statebins() +
labs(title = "2020 Presidential Election Prediction Map",
subtitle = "Using Polls and Decreased Demographic Effects",
fill = "") +
scale_fill_manual(values=c("steelblue2", "indianred"), breaks = c("Biden", "Trump"))
ggsave(path = "images", filename = "surge_predict.png", height = 6, width = 10)
covid <- read_csv("data/COVID-19_Cases_and_Deaths.csv")
# Loading libraries
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggrepel)
library(ggthemes)
library(patchwork)
library(gt)
library(broom)
library(usmap)
library(janitor)
library(statebins)
library(maptools)
library(rgdal)
library(stargazer)
# Reading in data
polls <- read.csv("data/pollavg_1968-2016 (1).csv")
poll_state <- read.csv("data/pollavg_bystate_1968-2016 (1).csv")
polls_2020 <- read.csv("data/polls_2020.csv")
popvote <- read.csv("data/popvote_1948-2016.csv")
popvote_state <- read.csv("data/popvote_bystate_1948-2016.csv")
ad_campaigns <- read_csv("data/ad_campaigns_2000-2012.csv")
ads_2020 <- read_csv("data/ads_2020.csv")
demog <- read_csv("data/demographic_1990-2018.csv")
covid <- read_csv("data/COVID-19_Cases_and_Deaths.csv")
head(covid)
covid %>%
mutate(submission_date = mdy(submission_date))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
filter(date > 2020-09-1)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
filter(date > mdy(9/1/2020))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
filter(date > 9/1/2020)
head(covid)
covid %>%
mutate(submission_date = mdy(submission_date))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(date, 6, 7)))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7)))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death)) %>%
select(state, avg_new_death, avg_new_case)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death)) %>%
select(state, avg_new_death, avg_new_case)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death)) %>%
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case <- mean(new_case)) %>%
mutate(avg_new_death <- mean(new_death))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case = mean(new_case)) %>%
mutate(avg_new_death = mean(new_death))
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case = mean(new_case)) %>%
mutate(avg_new_death = mean(new_death)) %>%
filter(state, avg_new_death, avg_new_case)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case = mean(new_case)) %>%
mutate(avg_new_death = mean(new_death)) %>%
select(state, avg_new_death, avg_new_case)
covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case = mean(new_case)) %>%
mutate(avg_new_death = mean(new_death)) %>%
select(state, avg_new_death, avg_new_case) %>%
unique()
head(covid)
pop <- read_csv("data/populations")
pop <- read_csv("data/populations.csv")
pop <- read_csv("data/populations.csv")
pop
head(pop)
pop <- read_csv("data/populations.csv") %>%
select(name, census2010pop)
pop <- read_csv("data/populations.csv") %>%
select(NAME, CENSUS2010POP)
head(pop)
covid_data <- covid %>%
mutate(submission_date = mdy(submission_date)) %>%
mutate(month = as.numeric(substr(submission_date, 6, 7))) %>%
filter(month > 8) %>%
group_by(state) %>%
mutate(avg_new_case = mean(new_case)) %>%
mutate(avg_new_death = mean(new_death)) %>%
select(state, avg_new_death, avg_new_case) %>%
unique()
head(covid_data)
covid_data$state <- state.name[match(covid_data$state, state.abb)]
head(pop)
covid_data %>%
inner_join(pop, by = c("state" = "NAME"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP)
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000)
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 1000000)
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000)
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
arrange(desc(avg_per_cap_deaths))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)) %>%
mutate(average_deaths = mean(avg_new_death)) %>%
arrange(desc(avg_per_cap_deaths))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)) %>%
mutate(average_deaths = mean(avg_new_death)) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)) %>%
mutate(average_deaths = mean(avg_new_death)) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP)) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP)) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot()
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP)) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP)) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot()
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona"))
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot(aes(avg_per_cap_deaths)) +
geom_bar()
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot(aes(avg_per_cap_deaths)) +
geom_bar(stat = "identity")
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar()
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity")
covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona")) %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity") %>%
abline(v = mean(average_deaths))
dat <- covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona"))
dat %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity") %>%
abline(v = mean(average_deaths))
dat %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity") %>%
abline(v = mean(dat$average_deaths))
dat %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity")
abline(v = dat$average_deaths)
dat %>%
ggplot(aes(x = state, y = avg_per_cap_deaths)) +
geom_bar(stat = "identity")
abline(v = mean(dat$average_deaths))
barplot(dat$state, dat$avg_per_cap_deaths)
barplot(height = dat$avg_per_cap_deaths)
barplot(height = dat$avg_per_cap_deaths, names = dat$state)
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1)
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1)
abline(v = mean(dat$average_deaths))
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1)
abline(h = mean(dat$average_deaths))
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1, col = "steelblue2")
abline(h = mean(dat$average_deaths), col = "indianred", lty = 3)
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1, col = "steelblue2")
abline(h = mean(dat$average_deaths), col = "indianred", lty = 2, lwd = 3)
dat <- covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona", "Iowa"))
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1, col = "steelblue2")
abline(h = mean(dat$average_deaths), col = "indianred", lty = 2, lwd = 3)
dat <- covid_data %>%
inner_join(pop, by = c("state" = "NAME")) %>%
mutate(avg_per_cap_cases = avg_new_case/CENSUS2010POP * 100000) %>%
mutate(avg_per_cap_deaths = avg_new_death/CENSUS2010POP * 100000) %>%
ungroup() %>%
mutate(average_cases = mean(avg_new_case)/mean(CENSUS2010POP) * 100000) %>%
mutate(average_deaths = mean(avg_new_death)/mean(CENSUS2010POP) * 100000) %>%
arrange(desc(avg_per_cap_deaths)) %>%
filter(state %in% c("Florida", "Wisconsin", "Pennsylvania", "Ohio", "North Carolina", "Arizona", "Iowa")) %>%
mutate(avg_btg = mean(avg_new_death)/mean(CENSUS2010POP) * 100000)
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1)
abline(h = mean(dat$average_deaths), col = "indianred", lty = 2, lwd = 3)
abline(h = mean(dat$average_deaths), col = "steelblue2", lty = 2, lwd = 3)
head(dat)
barplot(height = dat$avg_per_cap_deaths, names = dat$state, las = 1, col = "steelblue2")
abline(h = mean(dat$average_deaths), col = "indianred", lty = 2, lwd = 3)
